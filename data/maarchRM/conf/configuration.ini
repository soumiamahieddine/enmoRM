; Declare variables for database connection
@include confvars.ini

[presentation.maarchRM]
@include menu.ini

; Default max result in search screens
maxResults = 500

; Public archive mode
publicArchives = false

; Logos, title and favicon of the application
logo = "/presentation/img/logo_white.png"
altLogo = "/presentation/img/logo1.png"
favicon = "/presentation/img/Fichier-5.ico"
title = "Enmo RM"
loginBackground = ".modal-backdrop {
    background-image: url('/presentation/img/fond.png');
    background-repeat: no-repeat;
    background-position: center top;
    background-color: #fff;
    background-size: cover;
    opacity: 1 !important;
}"
; If you use the CSS generator, the file is generated in folder "public/css/[file name]"
css = "/presentation/css/style.css"

; Set a title in the navbar with a specific style
;navbarTitle = "[
;    {
;        'style' : 'font-size:44px;',
;        'value' : 'm'
;    },
;    {
;        'style' : 'font-size:32px; font-weight:bold;',
;        'value' : 'aarch R'
;    },
;    {
;        'style' : 'font-size:44px;',
;        'value' : 'm'
;    }
;]"

; List of displayable format as preview
displayableFormat = "['application/pdf', 'image/jpeg', 'image/png', 'text/plain']"

[recordsManagement]
; Profile directory for rng profile
profilesDirectory = "%laabsDirectory%/data/maarchRM/profiles"
refDirectory = "%laabsDirectory%/data/maarchRM/ref"

; The hash algorithm used to generate the fingerprint of binary objects during the deposit.
; If you want to use another hash algorithm, you can find every possibles values to https://www.php.net/manual/fr/function.hash-algos.php
; hashAlgorithm=SHA1

; Type of archival profile
; 2 = descriptionClass/properties + management rules
; 1 or 3 = File and 2
archivalProfileType = 2

; Automatic generation of archiverArchiveId on deposit
; format   :              Format sequence to follow. Variables availables are sequence and date.
;                         They must be followed by their name (for sequence) or type (like year, month, day, for date) between ().
;                         Sequences configuration are as follow :
;                              <sequence(sequenceName, paddingValue, paddingNumber).
;                              paddingValue and paddingNumber are the maximum number of values to be added before sequence if needed
;
; isAutomaticallyForced : false : a value will be generated and set only if no value is provided on the submission
;                         true  : a value will be generated and replace any incoming value on the submission
; contentSuffix           Suffix, to add for children if isInheritedFromParent is selected
;                         separator : string to add before suffix
;                         value : value to padd suffix
;                         length : padding length
;


; Generator of archiver archiveId
;archiveIdGenerator = "{
;    'service' : 'recordsManagement/Generator/Sequence',
;    'archiverArchiveIdRules' : {
;        'isAutomaticallyForced' : true,
;        'isInheritedFromParent' : true,
;        'format' : 'FR094080_<date(Y)>_AE<sequence(archiverArchiveIdSequence, 0, 4)>',
;        'contentSuffix' : {
;            'separator' : '_',
;            'value' : '0',
;            'length' : 3
;        }
;   }
;}"


; Default Retention Rule if any retention rule is set up ("dispose" or "preserve")
actionWithoutRetentionRule = "dispose"

; Default Communication Rule if no communication rule is set up ("allow" or "deny")
actionWithoutCommunicationRule = "deny"

; Delete the description of an archive when an archive is deleted
deleteDescription = false

; Show the conversion error
conversionError = false

; Storage path configuration
; Use this following variables to défine the storage path
;          KEY                         BUNDLE              DESRIPTION
;       app                         N.A                 The app name
;       instance                    N.A                 The instance name
;       originatorOwnerOrgId        recordsManagement   The owner originator identifier
;       originatorOrgRegNumber      recordsManagement   The originator registration number
;       archivalProfileReference    recordsManagement   The archival profile reference
;       batchId                     medona              The message identifier
;       archiverOrgRegNumber        medona              The archiver registration number
;       depositorOrgRegNumber       medona              The depositor registration number
;       messageDate                 medona              The date of message
;       messageReference            medona              The message reference
;
; To include a part of date, you must use <date(format)>.
;   - Y for a full numeric representation of a year, 4 digits
;   - m for the numeric representation of a month, with leading zeros
;   - d for day of the month, 2 digits with leading zeros
;
; To make packages, use a number. Packages must be the only variable on the directory step name
;       good ex : /<200>/ to make incremental containers of two hundred items
;       bad example : /prefix_<200>/
storePath = "<instance>/<originatorOwnerOrgId>/<originatorOrgRegNumber>/<archivalProfileReference>/<date(Y)>/<date(m)>/<date(d)>"

; The path of journals in the file plan
; To include the type of log you must use <type>
; To include a part of date, you must use <date(format)>.
;   - Y for a full numeric representation of a year, 4 digits
;   - m for the numeric representation of a month, with leading zeros
;   - d for day of the month, 2 digits with leading zeros
logFilePlan = "<type>/<date(Y)>/<date(m)>"

translationLogType = "{
    'lifeCycle' : 'Journal du cycle de vie',
    'application' : 'Journal de l\'application',
    'system' : 'Journal du système'
}"

;The path of the stopword file for fullTextIndexing
stopWordsFilePath = "%laabsDirectory%/data/stopwords/stopwords_fr.txt"

;Additional schemes used to describe complex metadata for archival profiles
;See documentation about descriptive schemes for a more in-depth explanation
descriptionSchemes = "{
    'extension' : {
        'label' : 'extension',
        'type' : 'json',
        'uri' : '%laabsDirectory%/data/maarchRM/samples/sample.json'
    },
    'log' : {
        'label' : 'log',
        'type' : 'php',
        'uri' : 'recordsManagement/log',
        'search': 'recordsManagement/log'
    }
}"

; The path of resource export folder
exportPath = "%laabsDirectory%/web/tmp"

[audit]
; Send notifications on audit event
;notifications = "{
;    'auth/userAccount/updateLock_userAccountId_' : {
;        'receivers' : ['alexis.ragot@maarch.org'],
;        'title' : 'MaarchRM - User lock',
;        'message' : 'be careful, user Alexis is lock',
;        'onResult' : true
;    }
;}"

; Chain journal with timestamp file. The timestamp dependency must be configured.
chainWithTimestamp = false;
; timestampService = dependency/timestamp/plugins/TsaClient

; Any path on this list will no be logged in the application journal
;ignorePaths = "['organization/organization/readTodisplay']"

; Any operation on this list will no be logged in the application journal
;ignoreMethods = "['read']"

[medona]
; Enable or disable the transaction mode
; true = Enable
; false = Disable
transaction = false

; Path to the message exchange directory
messageDirectory = "%laabsDirectory%/data/maarchRM/medona"

; Maximum file size (in bytes) for automatic transfer validation
autoValidateSize = 2147000

; Array of task to remove medona message directories
; 'type' is an array of medona message type
; 'status' is an array of medona message status
; 'delay' is the difference with the current date
;removeMessageTask = "{
;    'task1' : {
;        'type' : ['ArchiveTransfer', 'ArchiveTransferReply'],
;        'status' : ['processed'],
;        'delay' : '-P1Y'
;    },
;    'task2' : {
;        'type' : ['ArchiveModificationNotification'],
;        'status' : ['sent'],
;        'delay' : '-P6M'
;    }
;}"

; Schema of message exchange
packageSchemas = "{
    'mades' : {
        'label' : 'Format d\'échange Maarch RM',
        'phpNamespace' : 'mades',
        'presenter' : 'mades/message'
    }
}"

;if package are comming from an external source
;connector params properties:
;   label:      Display name of the property
;   source:     'input' | 'param'
;   required:   true or false (default: false)
;   type:       'file' | 'text' | 'number' | 'boolean' | 'enum' | 'organization' | 'archivalProfile' (default: 'text')
;   enumNames:  (only if type is 'enum'), array of texts or numbers
packageConnectors = "{
    'mades' : {
        'label' : 'Schéma Mades avec pièces jointes',
        'service'  :'medona/Connectors/Multiparts',
        'schema' : 'mades',
        'params' : {
            'attachments' : {
                'label' : 'Pièces',
                'source' : 'input',
                'type' : 'file',
                'multiple' : true
            }
        }
    },
    'madesZip' : {
        'label' : 'Packet Compressé Mades',
        'service'  :'medona/Connectors/Zip',
        'schema' : 'mades',
        'params' : {
            'manifest' : {
                'label' : 'Message name',
                'source' : 'input',
                'required' : true,
                'default': 'manifest.xml'
            }
        }
    }
}"

; Message exchange menu
; 'label' is the title of menu
; 'href'  is the path to the action
; 'class' is the class of the button
; 'submenu' is the submenu of the menu. In the case, 'href' must be empty
menu = "[
   {
       'label' : 'Transferts entrants',
       'href'  : '#',
       'class' : 'fa fa-sign-in fa-fw',
       'submenu' : [
            {
                'label' : 'Importer un bordereau',
                'href'  : '/transfer'
            },
            {
                'label' : 'Transferts en attente de traitement',
                'href'  : '/transfer/sent'
            },
            {
                'label' : 'Transferts à traiter',
                'href'  : '/transfer/received'
            },
            {
                'label' : 'Historique de transfert',
                'href'  : '/transfer/history'
            }
        ]
    },
    {
        'label' : 'Communication',
        'href'  : '#',
        'class' : 'fa fa-share fa-fw',
        'submenu' : [
            {
                'label' : 'Demandes d\'autorisation',
                'href'  : '/delivery/Authorizationrequest'
            },
            {
               'label' : 'Communications à valider',
                'href'  : '/delivery/request'
            },
            {
                'label' : 'Communications à récupérer',
                'href'  : '/delivery/list'
            },
            {
                'label' : 'Communications à finaliser',
                'href'  : '/delivery/Process'
            },
            {
                'label' : 'Historique de communication',
                'href'  : '/delivery/history'
            }
        ]
    },
    {
        'label' : 'Restitution',
        'href'  : '#',
        'class' : 'fa fa-reply fa-fw',
        'submenu' : [
            {
                'label' : 'Demandes à valider',
                'href'  : '/restitution/Requestvalidation'
            },
            {
                'label' : 'Restitutions à récupérer',
                'href'  : '/restitution/validation'
            },
            {
                'label' : 'Restitutions à finaliser',
                'href'  : '/restitution/process'
            },
            {
                'label' : 'Historique de restitution',
                'href'  : '/restitution/history'
            }
        ]
    },
    {
        'label' : 'Élimination',
        'href'  : '#',
        'class' : 'fa fa-remove fa-fw',
        'submenu' : [
            {
                'label' : 'Demandes d\'autorisation',
                'href'  : '/destruction/Authorizationrequests'
            },
            {
                'label' : 'Demandes à valider',
                'href'  : '/destruction/processlist'
            },
            {
                'label' : 'Historique d\'élimination',
                'href'  : '/destruction/history'
            }
        ]
    },
    {
        'label' : 'Transferts sortants',
        'href'  : '#',
        'class' : 'fa fa-sign-out fa-fw',
        'submenu' : [
            {
                'label' : 'Transferts à acquitter',
                'href'  : '/outgoingTransfer/received'
            },
            {
                'label' : 'Transferts à finaliser',
                'href'  : '/outgoingTransfer/Process'
            },
            {
                'label' : 'Historique de transfert',
                'href'  : '/outgoingTransfer/history'
            }
        ]
    },
    {
        'label' : 'Demandes de modification',
        'href'  : '#',
        'class' : 'fa fa-sign-out fa-fw',
        'submenu' : [
            {
                'label' : 'Demandes à traiter',
                'href'  : '/modificationrequest/list'
            },
            {
                'label' : 'Historique des demandes',
                'href'  : '/modificationrequest/history'
            }
        ]
    },
    {
        'label' : 'Notifications',
        'href'  : '/notifications',
        'class' : 'fa fa-bell-o fa-fw'
    }
]"

[auth]
; If useSecurityLevel = true, uncomment the next lign
;@include securityLevel.ini

; Add stronger verification on user possibilities based on security level
useSecurityLevel = false

; Encryption algorithm (MD5, SHA256, SHA512...)
passwordEncryption = SHA256

; Admin user account name
adminUsers = "['superadmin']"

; Allow the user to modify his or her information
allowUserModification = true

; Number of login attempts before the user account is locked. ignored if 0
; Duration of validity for password. ignored if 0
; Duration in hour of the generated password. ignored if 0
; Minimum length for password. ignored if 0
; Password must content non alphanumeric characters (On|Off, 0|1, true|false)
; Password must content character digits from 0 to 9 (On|Off, 0|1, true|false)
; Password must content mixed case alphabetic characters (On|Off, 0|1, true|false)
; Time in second of the session
; Lock time in seconds
securityPolicy = "{
    'loginAttempts' : 3,
    'passwordValidity' : 0,
    'newPasswordValidity' : 1,
    'passwordMinLength' : 8,
    'passwordRequiresSpecialChars' : 1,
    'passwordRequiresDigits' : 1,
    'passwordRequiresMixedCase' : 1,
    'sessionTimeout' : 3600,
    'lockDelay' : 30
}"

; User story available without privilege
publicUserStory = "['app/*']"

; Blacklist of user stories
; if 'transaction' parameter disable, uncomment the block 'blacklistUserStories' below
; if 'transaction' parameter enable, comment the block 'blacklistUserStories' below
blacklistUserStories = "[
    'adminArchive/archivalAgreement',
    'adminArchive/controlAuthority',
    'archiveDeposit/processTransfer',
    'archiveDeposit/transfer*',
    'archiveManagement/modificationRequestProcess',
    'archiveManagement/modificationRequestSend',
    'definitiveTransfer/*',
    'delivery/*',
    'destruction/destructionAuthorizationRequest',
    'destruction/destructionHistory',
    'destruction/destructionProcess',
    'originatorAccess/*',
    'restitution/*',
    'adminFunc/contact',
    'adminArchive/adminStorageRule',
    'export/role',
    'import/role'
]"

; Blacklist of user stories
; if 'transaction' parameter disable, comment the block 'blacklistUserStories' below
; if 'transaction' parameter enable, uncomment the block 'blacklistUserStories' below
;blacklistUserStories = "[
;   'adminFunc/contact',
;   'adminArchive/adminStorageRule',
;   'definitiveTransfer/*'
;]"

; CSRF
; 'csrfWhiteList' URI not protected by the CSRF service
; 'csrfConfig' Available rules
;   'cookieName' Name of the cookie whose value is the csrf token
;   'tokenLenght' Token size
;   'lifeTime' Token validity in seconds (defaults 3600)
csrfWhiteList = "['user/login', 'user/password', 'user/prompt', 'user/logout', 'user/generateResetToken']"
csrfConfig = '{
    "cookieName" : "Csrf",
    "tokenLength" : 32
}'

; Available privileges for service account
; if 'transaction' parameter disable, uncomment the block 'servicePrivilege' below
; if 'transaction' parameter enable, comment the block 'servicePrivilege' below
servicePrivileges = "[
    {
        'serviceURI': 'audit/event/createChainjournal',
        'description' : 'Chaîner le journal de l\'application'
    },
    {
        'serviceURI': 'batchProcessing/scheduling/updateProcess',
        'description' : 'Exécution automatique des tâches planifiées'
    },
    {
        'serviceURI': 'lifeCycle/journal/createChainjournal',
        'description' : 'Chaîner le journal du cycle de vie'
    },
    {
        'serviceURI': 'recordsManagement/archiveCompliance/readPeriodic',
        'description' : 'Valider l\'intégrité des archives'
    },
    {
        'serviceURI': 'recordsManagement/archives/deleteDisposablearchives',
        'description' : 'Détruire les archives'
    },
    {
        'serviceURI': 'recordsManagement/archives/updateIndexfulltext',
        'description' : 'Extraction plein texte'
    },
    {
        'serviceURI': 'recordsManagement/archive/create',
        'description' : 'Création d\'une archive'
    },
    {
        'serviceURI': 'recordsManagement/archive/createArchiveBatch',
        'description' : 'Création par batch d\'archive(s)'
    },
    {
        'serviceURI' : 'recordsManagement/archives/updateArchivesretentionrule',
        'description' : 'Mise à jour de la durée d\'utilité administrative'
    },
    {
        'serviceURI' : 'recordsManagement/archive/read_archiveId_Digitalresource_resId_Contents',
        'description' : 'Récupérer directement le contenu d\'une ressource d\'archive'
    },
    {
        'serviceURI' : 'recordsManagement/archives/readExtractfulltext',
        'description' : 'Extraction et indexation plein texte'
    },
    {
        'serviceURI': '*',
        'description' : 'Tous les droits'
    }
]"

; Available privileges for the services accounts
; if 'transaction' parameter disable, comment the block 'servicePrivilege' below
; if 'transaction' parameter enable, uncomment the block 'servicePrivilege' below
;servicePrivileges = "[
;    {
;        'serviceURI': 'audit/event/createChainjournal',
;        'description' : 'Chaîner le journal de l\'application'
;    },
;    {
;        'serviceURI': 'batchProcessing/scheduling/updateProcess',
;        'description' : 'Exécution automatique des tâches planifiées'
;    },
;    {
;        'serviceURI': 'lifeCycle/journal/createChainjournal',
;        'description' : 'Chaîner le journal du cycle de vie'
;    },
;    {
;        'serviceURI': 'recordsManagement/archiveCompliance/readPeriodic',
;        'description' : 'Valider l\'intégrité des archives'
;    },
;    {
;        'serviceURI': 'recordsManagement/archives/deleteDisposablearchives',
;        'description' : 'Détruire les archives'
;    },
;    {
;        'serviceURI': 'recordsManagement/archives/updateIndexfulltext',
;        'description' : 'Extraction plein texte'
;    },
;    {
;        'serviceURI': 'recordsManagement/archive/create',
;        'description' : 'Création d\'une archive'
;    },
;    {
;        'serviceURI': 'recordsManagement/archive/createArchiveBatch',
;        'description' : 'Création par batch d\'archive(s)'
;    },
;    {
;        'serviceURI' : 'recordsManagement/archives/updateArchivesretentionrule',
;        'description' : 'Mise à jour de la durée d\'utilité administrative'
;    },
;    {
;        'serviceURI' : 'medona/ArchiveDelivery/updateProcessBatch',
;        'description' : 'Traiter les communications'
;    },
;    {
;        'serviceURI' : 'medona/ArchiveDestruction/updateProcessAll',
;        'description' : 'Traiter les destructions'
;    },
;    {
;        'serviceURI' : 'medona/ArchiveRestitution/updateProcessBatch',
;        'description' : 'Traiter les restitutions'
;    },
;    {
;        'serviceURI' : 'medona/ArchiveTransfer/updateProcessBatch',
;        'description' : 'Traiter les transferts'
;    },
;    {
;        'serviceURI' : 'medona/ArchiveTransfer/updateValidateBatch',
;        'description' : 'Valider les transferts'
;    },
;    {
;        'serviceURI' : 'medona/message/deleteMessageDirectoryPurge',
;        'description' : 'Purge des bordereaux'
;    },
;    {
;        'serviceURI' : 'recordsManagement/archives/readExtractfulltext',
;        'description' : 'Extraction et indexation plein texte'
;    },
;    {
;        'serviceURI': '*',
;        'description' : 'Tous les droits'
;    }
;]"

[lifeCycle]

; Chain life cycle journal by originator in addition to the main journal
chainJournalByOrganization = false;

; Chain journal with timestamp file. The timestamp dependency must be configured.
chainWithTimestamp = false;
; timestampService = dependency/timestamp/plugins/TsaClient

; Notifications
;notifications = "[
;    {
;        'filter': {
;            'eventType': 'recordsManagement/integrityCheck'
;        },
;        'title': 'Integrity check',
;        'recipients': ['Info <info@maarch.org>'],
;        'message' : 'This is a simple plain text mesage with no variable'
;    },
;    {
;        'filter': {
;            'eventType': 'recordsManagement/integrityCheck'
;        },
;        'title': 'Integrity check',
;        'recipients': '../data/maarchRM/notifications/simple_recipients.php',
;        'message' : {
;            'template': '../data/maarchRM/notifications/simple.html',
;            'sources': '../data/maarchRM/notifications/simple_sources.php'
;        }
;    }
;]"

[organization]

; Displaying the organization as a tree
; true = organization tree
; false = organization list
; WARNING : Above 40 services, we advise you not to activate this option.
isOrgTree = true;

; Roles of organization unit
; if 'transaction' parameter disable, uncomment the block 'orgUnitRoles' below
; if 'transaction' parameter enable, comment the block 'orgUnitRoles' below
orgUnitRoles = "{
    'owner' : {
        'code' : 'owner',
        'description' : 'The system owner'
   }
}"

; Roles of organization unit
; if 'transaction' parameter disable, comment the block 'orgUnitRoles' below
; if 'transaction' parameter enable, uncomment the block 'orgUnitRoles' below
; orgUnitRoles = "{
;     'owner' : {
;         'code' : 'owner',
;         'description' : 'The system owner'
;     },
;     'archiver' : {
;         'code' : 'archiver',
;         'description' : 'Archival agency'
;     },
;     'controlAuthority' : {
;         'code' : 'controlAuthority',
;         'description' : 'Archive control authority'
;     },
;     'depositor' : {
;         'code' : 'depositor',
;         'description' : 'Archive depositor agency'
;     },
;     'originator' : {
;         'code' : 'originator',
;         'description' : 'Archive originating agency'
;     }
; }"


[batchProcessing]
; Available tasks to batch processing
; if 'transaction' parameter disable, uncomment the block 'tasks' below
; if 'transaction' parameter enable, comment the block 'tasks' below
tasks = "[
    {
        'taskId': '01',
        'route' : 'audit/event/createChainjournal',
        'description' : 'Chainer le journal de l\'application'
    },
    {
        'taskId': '02',
        'route' : 'lifeCycle/journal/createChainjournal',
        'description' : 'Chainer le journal du cycle de vie'
    },
    {
        'taskId': '03',
        'route' : 'recordsManagement/archiveCompliance/readPeriodic',
        'description' : 'Intégrité périodique'
    },
    {
        'taskId': '04',
        'route' : 'recordsManagement/archives/deleteDisposablearchives',
        'description' : 'Détruire les archives'
    },
    {
        'taskId': '05',
        'route' : 'medona/message/deleteMessageDirectoryPurge',
        'description' : 'Purge des bordereaux'
    },
    {
       'taskId': '13',
       'route' : 'recordsManagement/archives/readExtractfulltext',
       'description' : 'Extraction plein texte'
    }
]"

; Available tasks to batch processing
; if 'transaction' parameter disable, comment the block 'tasks' below
; if 'transaction' parameter enable, uncomment the block 'tasks' below
;tasks = "[
;    {
;        'taskId': '01',
;        'route' : 'audit/event/createChainjournal',
;        'description' : 'Chainer le journal de l\'application'
;    },
;    {
;        'taskId': '02',
;        'route' : 'lifeCycle/journal/createChainjournal',
;        'description' : 'Chainer le journal du cycle de vie'
;    },
;    {
;        'taskId': '03',
;        'route' : 'recordsManagement/archiveCompliance/readPeriodic',
;        'description' : 'Intégrité périodique'
;    },
;    {
;        'taskId': '04',
;        'route' : 'medona/ArchiveDestruction/updateProcessAll',
;        'description' : 'Traiter les destructions'
;    },
;    {
;        'taskId': '05',
;        'route' : 'medona/message/deleteMessageDirectoryPurge',
;        'description' : 'Purge des bordereaux'
;    },
;    {
;        'taskId': '06',
;        'route' : 'medona/ArchiveRestitution/updateProcessBatch',
;        'description' : 'Traiter les restitutions'
;    },
;    {
;        'taskId': '07',
;        'route' : 'medona/ArchiveTransfer/updateProcessBatch',
;        'description' : 'Traiter les transferts'
;    },
;    {
;        'taskId': '08',
;        'route' : 'medona/ArchiveTransfer/updateValidateBatch',
;        'description' : 'Valider les transferts'
;    },
;    {
;        'taskId': '09',
;        'route' : 'medona/ArchiveDelivery/updateProcessBatch',
;        'description' : 'Traiter les communications'
;    },
;    {
;        'taskId': '10',
;        'route' : 'recordsManagement/archives/updateArchivesretentionrule',
;        'description' : 'Mise à jour de la durée d\'utilité administrative'
;    },
;    {
;        'taskId': '11',
;        'route' : 'recordsManagement/archives/deleteDisposablearchives',
;        'description' : 'Détruire les archives'
;    },
;    {
;        'taskId': '12',
;        'route' : 'batchProcessing/notification/updateProcess',
;        'description' : 'Envoyer notification'
;    },
;    {
;        'taskId': '13',
;        'route' : 'recordsManagement/archives/readExtractfulltext',
;        'description' : 'Extraction plein texte'
;    }
;]"


[dependency.datasource]
@Adapter                        = Database
Dsn                             = %dsn%
Username                        = %username%
Password                        = %password%

[dependency.fileSystem]

; Path to the UK National Archives DROID signature file for file format detection
; Droid signature files can be found at http://www.nationalarchives.gov.uk/aboutapps/pronom/droid-signature-files.htm
signatureFile = "%laabsDirectory%/data/maarchRM/droidSignatureFiles/DROID_SignatureFile_V97.xml"
containerSignatureFile = "%laabsDirectory%/data/maarchRM/droidSignatureFiles/container-signature-20201001.xml"

; Path to libreOffice executable
;libreOfficeExecutable = "c:\Program Files (x86)\LibreOffice 5\program\soffice"
libreOfficeExecutable = "/usr/bin/libreoffice"

; Conversion paths
conversionServices = "[
    {
        'serviceName'     : 'dependency/fileSystem/plugins/libreOffice',
        'softwareName'    : 'LibreOffice',
        'softwareVersion' : '5.4.2.0',
        'inputFormats'    : ['fmt/412', 'fmt/291', 'fmt/293'],
        'outputFormats'   : {
            'fmt/95' : {
                'extension' : 'pdf',
                'filter' : 'writer_pdf_Export',
                'options': 'SelectPdfVersion=1'
            },
            'fmt/18' : {
                'extension' : 'pdf'
            }
        }
    }
]"

;Configuration of fulltextservices
;serviceName : path to dependency file
;inputFormat : puid of file the service should extract
;options : options for extract service
;languages : language recognition pattern for tesseract. See https://tesseract-ocr.github.io/tessdoc/Data-Files-in-different-versions.html for complete list
fullTextServices = "[
    {
        'serviceName' : 'dependency/fileSystem/plugins/Tika',
        'inputFormats' : [
                'fmt/346',
                'fmt/37',
                'fmt/38',
                'fmt/39',
                'fmt/40',
                'fmt/412',
                'fmt/459',
                'fmt/523',
                'fmt/597',
                'fmt/599',
                'fmt/609',
                'fmt/172',
                'fmt/173',
                'fmt/174',
                'fmt/175',
                'fmt/176',
                'fmt/177',
                'fmt/178',
                'fmt/214',
                'fmt/445',
                'fmt/55',
                'fmt/553',
                'fmt/554',
                'fmt/555',
                'fmt/556',
                'fmt/56',
                'fmt/57',
                'fmt/58',
                'fmt/59',
                'fmt/595',
                'fmt/598',
                'fmt/60',
                'fmt/61',
                'fmt/62',
                'fmt/627',
                'fmt/628',
                'x-fmt/123',
                'x-fmt/124',
                'x-fmt/125',
                'x-fmt/126',
                'x-fmt/128',
                'x-fmt/17',
                'x-fmt/23',
                'x-fmt/46',
                'x-fmt/58',
                'x-fmt/74',
                'x-fmt/97',
                'fmt/128',
                'fmt/129',
                'fmt/130',
                'fmt/135',
                'fmt/136',
                'fmt/137',
                'fmt/138',
                'fmt/101',
                'fmt/1129',
                'fmt/14',
                'fmt/144',
                'fmt/145',
                'fmt/146',
                'fmt/147',
                'fmt/148',
                'fmt/15',
                'fmt/157',
                'fmt/158',
                'fmt/16',
                'fmt/17',
                'fmt/18',
                'fmt/19',
                'fmt/20',
                'fmt/276',
                'fmt/354',
                'fmt/476',
                'fmt/477',
                'fmt/478',
                'fmt/479',
                'fmt/480',
                'fmt/481',
                'fmt/488',
                'fmt/489',
                'fmt/490',
                'fmt/491',
                'fmt/492',
                'fmt/493',
                'fmt/95',
                'x-fmt/111',
                'x-fmt/18',
                'x-fmt/263'
        ]
    },
    {
        'serviceName' : 'dependency/fileSystem/plugins/Tesseract',
        'inputFormats' : [
            'fmt/149',
            'fmt/150',
            'fmt/151',
            'fmt/337',
            'fmt/41',
            'fmt/42',
            'fmt/43',
            'fmt/44',
            'fmt/463',
            'fmt/529',
            'fmt/590',
            'x-fmt/392',
            'fmt/11',
            'fmt/12',
            'fmt/13'
        ],
        'options' : {
            'languages' : ['fra','eng']
        }
    }
]"

;path to tika extraction executable
;tikaJarExecutable="/path/to/tika-app-X.XX.jar"

;path to tesseract executable (only for windows)
;tesseractExecutable="C:\...."

; Path of zip executable (only for Windows)
;zipExecutable = "C:\Program Files\7-Zip\7z.exe"

[dependency.html]
headers                         = "['dashboard/head.html']"
layout                          = "dashboard/layout.html"
layoutData                      = "presentation/dashboard/layout"

plugins                         = "{
    'dataTable'       : '\dependency\html\plugins\DataTable\DataTable',
    'dataList'        : '\dependency\html\plugins\DataList\DataList',
    'datePicker'      : '\dependency\html\plugins\datePicker\datePicker',
    'dateTimePicker'  : '\dependency\html\plugins\dateTimePicker\dateTimePicker'
}"

layoutReferer = "['/user/prompt', '/user/logout']"

[dependency.json]
Options                         = JSON_HEX_TAG | JSON_HEX_AMP | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_FORCE_OBJECT

[dependency.localisation]
@Adapter                        = Gettext
lang                            = fr
dateFormat                      = d-m-Y
dateTimeFormat                  = "Y-m-d H:i:s \(O\)"
timestampFormat                 = "Y-m-d H:i:s.uO"
timezone                        = Europe/Paris

[dependency.logger]

loggers = "{
    'importCustomerRecords' : {
        'level' : 'INFO',
        'appenders' : [ 'importCustomerRecordsFile' ],
        'additivity' : false
    }
}"

appenders = "{
    'default' : {
        'class' : 'LoggerAppenderFile',
        'layout' : {
            'class' : 'LoggerLayoutSimple'
        },
        'params' : {
            'file' : '/var/www/laabs/data/redgreen/log4php.txt',
            'append' : true
        }
    },
    'importCustomerRecordsFile' : {
        'class' : 'LoggerAppenderDailyFile',
        'layout' : {
            'class' : 'LoggerLayoutPattern',
            'params' : {
                'conversionPattern' : '[%date{d/m/Y H:i:s}] %-5p [%t] %message %newline'
            }
        },
        'params' : {
            'datePattern' : 'Y-m-d',
            'file' : '/var/www/laabs/data/maarchRM/importMapping-%s.log',
            'append' : true
        }
    }
}"

[dependency.notification]
@Adapter = Mailer

; Configuration of notification service
mailHost = 'smtp.gmail.com'
mailUsername = '';
mailPassword = '';
mailPort = 587;
mailSender = "";
mailAdminReceiver = "";
mailSMTPAuth = true;
mailSMTPSecure = "tls";

;Example for laposte
;mailHost = 'smtp.laposte.com';
;mailPort = 25;
;SMTPSecure = "tls";
;mailSMTPAuth = true;

;Example for gmail
;mailHost = 'smtp.gmail.com';
;mailPort = 587;
;SMTPSecure = "tls";
;mailSMTPAuth = true;

[dependency.repository]
@Adapter                        = Repository

[dependency.sdo]
@Adapter                        = Database
Dsn                             = %dsn%
Username                        = %username%
Password                        = %password%

; Auto generate ids before create operation
; 0/false/Off                   = never generate ids
; 1/true/On                     = generates ids when no id is set on object
generateKey                     = on

; Sets the boolean storage method
; 0 : as integer 0 | 1
; 1 : as boolean true |false
; 2 : as char Y / N
boolFormat = 1

dateFormat = YYYY-MM-DD
timeFormat = HH24:MI:SS
datetimeFormat = "YYYY-MM-DDtHH24:MI:SS,US"

; Log events in Laabs log
; 0 = no trace
; 1 = trace only errors
; 2 = trace queries
; 3 = dump queries
trace = 1

[dependency.timestamp]

; The URL of the TSA provider
; Somme open and free TSA test services :
; tsaUrl=http://zeitstempel.dfn.de
; tsaUrl=http://timestamp.entrust.net/TSS/RFC3161sha2TS
; tsaUrl=http://time.certum.pl

; The path to openssl, if not in PHP path
; pathToOpenSSL="C:\Program Files\OpenSSL-Win64\bin\openssl"
